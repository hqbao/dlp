<!doctype html>
<html lang="en">
<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="/bootstrap/css/bootstrap.css">
  <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
  <script src="/bootstrap/js/bootstrap.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.4.0/dist/tf.min.js"></script>
  <title>DLP - AI Model</title>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="/">DLP</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mr-auto">
        <li class="nav-item">
          <a class="nav-link" href="/profile/index">MY PROFILE</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/ai-model/list">MY MODELS</a>
        </li>
      </ul>
      <form class="form-inline my-2 my-lg-0">
        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-info my-2 my-sm-0" type="submit">Search</button>
      </form>
    </div>
  </nav>
  <br>
  <div class="container-fluid">
    <div class="row">
      <div class="col-12">
        <div style="width: 896px;margin: auto;">
          <img id="preview" src="" style="position: fixed;top: 80px;" />
          <video style="height: 448px;width: 448px;float: left;background: black;"></video>
          <div id="previewNumber" style="height: 448px;width: 448px;float: left;background-color: cyan;font-size: 300px;padding-left: 140px;">9</div>
        </div>
      </div>
      <div class="col-12" style="text-align: center;">
        <button onclick="onStartClicked()">START</button>
        <button onclick="onStopClicked()">STOP</button>
      </div>
    </div>
  </div>
  <script type="text/javascript">
    async function infer(blob) {
      // const model = await tf.loadGraphModel('https://ai-designer.io/apps/qm/tfjs/model.json');
      const model = await tf.loadGraphModel(jModel);
      var pix = tf.browser.fromPixels(preview);
      pix = tf.mean(pix, -1, false);
      pix = pix.expandDims(0);
      var prediction = await model.executeAsync(pix);
      prediction = tf.argMax(prediction, -1)
      var number = prediction.arraySync()[0];
      document.getElementById('previewNumber').innerHTML = number;
    }

    var preview = document.getElementById('preview');
    var canvas = document.createElement('canvas');
    var ctx = canvas.getContext('2d');
    var isVideoReady = false;

    function initCanvas(e) {
      canvas.width = this.videoWidth;
      canvas.height = this.videoHeight;
    }

    function drawFrame(e) {
      ctx.drawImage(this, 0, 0);
      canvas.toBlob(onFrame, 'image/jpeg');
    }

    function onFrame(blob) {
      var objectURL = URL.createObjectURL(blob);
      preview.src = objectURL;

      infer(blob);
    }

    function onEnded(e) {}

    var video = document.querySelector('video');
    video.addEventListener('loadedmetadata', initCanvas, false);
    video.addEventListener('timeupdate', drawFrame, false);
    video.addEventListener('ended', onEnded, false);

    function onStopClicked() {
      if (isVideoReady) {
        video.pause();
      }
    }

    function onStartClicked() {
      if (isVideoReady) {
        video.play();
      }
    }

    function play() {
      var constraints = {audio: false, video: {width: 28, height: 28}}; 
      navigator.mediaDevices.getUserMedia(constraints)
      .then(function(mediaStream) {
        video.srcObject = mediaStream;
        video.onloadedmetadata = function(e) {
          isVideoReady = true;
        };
      })
      .catch(function(err) { 
        console.log(err.name + ": " + err.message); 
      });
    }

    function getParameterByName(name, url = window.location.href) {
      name = name.replace(/[\[\]]/g, '\\$&');
      var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
          results = regex.exec(url);
      if (!results) return null;
      if (!results[2]) return '';
      return decodeURIComponent(results[2].replace(/\+/g, ' '));
    }

    var aiModelId = getParameterByName('id');
    var jModel = null;
    var http = new XMLHttpRequest();
    
    function load() {
      http.open('GET', 'https://ai-designer.io/api/aimodel/detail?id='+aiModelId, true);
      http.setRequestHeader('Authorization', localStorage.getItem('TOKEN'));
      http.onreadystatechange = function() {
        if(http.readyState == 4) {
          if (http.status == 401) {
            location.href = '/sign-in';
            return;
          }

          var msg = JSON.parse(http.responseText);
          if (msg.msgCode == 1000) {
            var model = msg.msgResp;
            jModel = model.tfjsModelUrl;
            play();
          }
        }
      }
      http.send();
    }

    load();
  </script>
</body>
</html>